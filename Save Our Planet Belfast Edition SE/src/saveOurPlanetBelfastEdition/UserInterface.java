package saveOurPlanetBelfastEdition;

public class UserInterface {

	// ==================================================
	// =================::Print Title::==================
	// ==================================================
	/**
	 * prints Save Our Planet, Belfast Edition in nice format using ASCI characters
	 */
	public void printTitle() {

		System.out.println("  _____                    ____               _____  _                  _   \r\n"
				+ " / ____|                  / __ \\             |  __ \\| |                | |  \r\n"
				+ "| (___   __ ___   _____  | |  | |_   _ _ __  | |__) | | __ _ _ __   ___| |_ \r\n"
				+ " \\___ \\ / _` \\ \\ / / _ \\ | |  | | | | | '__| |  ___/| |/ _` | '_ \\ / _ \\ __|\r\n"
				+ " ____) | (_| |\\ V /  __/ | |__| | |_| | |    | |    | | (_| | | | |  __/ |_ \r\n"
				+ "|_____/ \\__,_| \\_/ \\___|  \\____/ \\__,_|_|    |_|    |_|\\__,_|_| |_|\\___|\\__|\r\n"
				+ "                                                                            ");
		System.out.println();
		System.out.println(" ____       _  __          _     ______    _ _ _   _             \r\n"
				+ "|  _ \\     | |/ _|        | |   |  ____|  | (_) | (_)            \r\n"
				+ "| |_) | ___| | |_ __ _ ___| |_  | |__   __| |_| |_ _  ___  _ __  \r\n"
				+ "|  _ < / _ \\ |  _/ _` / __| __| |  __| / _` | | __| |/ _ \\| '_ \\ \r\n"
				+ "| |_) |  __/ | || (_| \\__ \\ |_  | |___| (_| | | |_| | (_) | | | |\r\n"
				+ "|____/ \\___|_|_| \\__,_|___/\\__| |______\\__,_|_|\\__|_|\\___/|_| |_|\r\n"
				+ "                                                                 ");
		System.out.println();

	}

	// ==================================================
	// ==============::Print Enter Name::================
	// ==================================================
	/**
	 * prints enter name in nice format using ASCI characters
	 */
	public void printEnterName() {
		System.out.println();
		System.out.println(" ______       _              _   _                      \r\n"
				+ "|  ____|     | |            | \\ | |                     \r\n"
				+ "| |__   _ __ | |_ ___ _ __  |  \\| | __ _ _ __ ___   ___ \r\n"
				+ "|  __| | '_ \\| __/ _ \\ '__| | . ` |/ _` | '_ ` _ \\ / _ \\\r\n"
				+ "| |____| | | | ||  __/ |    | |\\  | (_| | | | | | |  __/\r\n"
				+ "|______|_| |_|\\__\\___|_|    |_| \\_|\\__,_|_| |_| |_|\\___|\r\n"
				+ "                                                        \r\n" + "");
		System.out.println();

	}

	// ==================================================
	// =================::Print Marker::=================
	// ==================================================
	/**
	 * prints Marker in nice format using ASCI characters
	 */
	public void printMarker() {
		System.out.println();
		System.out.println("\r\n" + "  _____ _                            __  __            _             \r\n"
				+ " / ____| |                          |  \\/  |          | |            \r\n"
				+ "| |    | |__   ___   ___  ___  ___  | \\  / | __ _ _ __| | _____ _ __ \r\n"
				+ "| |    | '_ \\ / _ \\ / _ \\/ __|/ _ \\ | |\\/| |/ _` | '__| |/ / _ \\ '__|\r\n"
				+ "| |____| | | | (_) | (_) \\__ \\  __/ | |  | | (_| | |  |   <  __/ |   \r\n"
				+ " \\_____|_| |_|\\___/ \\___/|___/\\___| |_|  |_|\\__,_|_|  |_|\\_\\___|_|   \r\n"
				+ "                                                                     \r\n"
				+ "                                                                     \r\n" + "\r\n" + "\r\n" + "");
		System.out.println();
	}

	// ==================================================
	// =============::Print Dice Rolled::================
	// ==================================================
	/**
	 * prints Dice Rolled in nice format using ASCI characters
	 */
	public void printDiceRolled() {
		System.out.println();
		System.out.println("\r\n" + "\r\n" + " _____  _            _____       _ _          _ \r\n"
				+ "|  __ \\(_)          |  __ \\     | | |        | |\r\n"
				+ "| |  | |_  ___ ___  | |__) |___ | | | ___  __| |\r\n"
				+ "| |  | | |/ __/ _ \\ |  _  // _ \\| | |/ _ \\/ _` |\r\n"
				+ "| |__| | | (_|  __/ | | \\ \\ (_) | | |  __/ (_| |\r\n"
				+ "|_____/|_|\\___\\___| |_|  \\_\\___/|_|_|\\___|\\__,_|\r\n"
				+ "                                                \r\n"
				+ "                                                \r\n" + "");
		System.out.println();
	
	}

	// ==================================================
	// =============::Print Next Player::================
	// ==================================================
	/**
	 * prints next Player in nice format using ASCI characters
	 */
	public void printnextPlayer() {
		System.out.println();
		System.out.println("\r\n" + " _   _           _     _____  _                       \r\n"
				+ "| \\ | |         | |   |  __ \\| |                      \r\n"
				+ "|  \\| | _____  _| |_  | |__) | | __ _ _   _  ___ _ __ \r\n"
				+ "| . ` |/ _ \\ \\/ / __| |  ___/| |/ _` | | | |/ _ \\ '__|\r\n"
				+ "| |\\  |  __/>  <| |_  | |    | | (_| | |_| |  __/ |   \r\n"
				+ "|_| \\_|\\___/_/\\_\\\\__| |_|    |_|\\__,_|\\__, |\\___|_|   \r\n"
				+ "                                       __/ |          \r\n"
				+ "                                      |___/           \r\n" + "");
		System.out.println();
	
	}

	// ==================================================
	// =========-======::Print Pass Go::=================
	// ==================================================
	/**
	 * prints passed Go in nice format using ASCI characters
	 */
	public void printPassedGo() {
		System.out.println();
		System.out.println("\r\n" + " _____                       _    _____  ____  \r\n"
				+ "|  __ \\                     | |  / ____|/ __ \\ \r\n"
				+ "| |__) |_ _ ___ ___  ___  __| | | |  __| |  | |\r\n"
				+ "|  ___/ _` / __/ __|/ _ \\/ _` | | | |_ | |  | |\r\n"
				+ "| |  | (_| \\__ \\__ \\  __/ (_| | | |__| | |__| |\r\n"
				+ "|_|   \\__,_|___/___/\\___|\\__,_|  \\_____|\\____/ \r\n"
				+ "                                               \r\n"
				+ "                                               \r\n" + "");
		System.out.println();
	}

	// ==================================================
	// ============::Print Purchase Area::===============
	// ==================================================
	/**
	 * prints purchase area? in nice format using ASCI characters
	 */
	public void printPurchaseArea() {

		System.out.println();
		System.out.println("\r\n" + "\r\n"
				+ " _____                _                                                ___  \r\n"
				+ "|  __ \\              | |                        /\\                    |__ \\ \r\n"
				+ "| |__) |   _ _ __ ___| |__   __ _ ___  ___     /  \\   _ __ ___  __ _     ) |\r\n"
				+ "|  ___/ | | | '__/ __| '_ \\ / _` / __|/ _ \\   / /\\ \\ | '__/ _ \\/ _` |   / / \r\n"
				+ "| |   | |_| | | | (__| | | | (_| \\__ \\  __/  / ____ \\| | |  __/ (_| |  |_|  \r\n"
				+ "|_|    \\__,_|_|  \\___|_| |_|\\__,_|___/\\___| /_/    \\_\\_|  \\___|\\__,_|  (_)  \r\n"
				+ "                                                                            \r\n"
				+ "                                                                            \r\n" + "\r\n" + "");
		System.out.println();

	}

	// ==================================================
	// ================::Print Invest::==================
	// ==================================================
	/**
	 * prints Invest? in nice format using ASCI characters
	 */
	public void printInvest() {
		System.out.println();
		System.out.println("\r\n" + " _____                     _     ___  \r\n"
				+ "|_   _|                   | |   |__ \\ \r\n" + "  | |  _ ____   _____  ___| |_     ) |\r\n"
				+ "  | | | '_ \\ \\ / / _ \\/ __| __|   / / \r\n" + " _| |_| | | \\ V /  __/\\__ \\ |_   |_|  \r\n"
				+ "|_____|_| |_|\\_/ \\___||___/\\__|  (_)  \r\n" + "                                      \r\n"
				+ "                                      \r\n" + "");
		System.out.println();
	}

	// ==================================================
	// ================::Print Pay Fee::=================
	// ==================================================
	/**
	 * prints Pay Fee in nice format using ASCI characters
	 */
	public void printPayFee() {
		System.out.println();
		System.out.println("\r\n" + "\r\n" + " _____                      ______        \r\n"
				+ "|  __ \\                    |  ____|       \r\n" + "| |__) |_ _ _   _    __ _  | |__ ___  ___ \r\n"
				+ "|  ___/ _` | | | |  / _` | |  __/ _ \\/ _ \\\r\n" + "| |  | (_| | |_| | | (_| | | | |  __/  __/\r\n"
				+ "|_|   \\__,_|\\__, |  \\__,_| |_|  \\___|\\___|\r\n"
				+ "             __/ |                        \r\n" + "            |___/                         \r\n"
				+ "");
		System.out.println();

	}

	// ==================================================
	// ============::Print Round Complete::==============
	// ==================================================
	/**
	 * prints Round Complete in nice format using ASCI characters
	 */
	public void printRoundComplete() {
		System.out.println();
		printBreakLinesEquals();
		System.out.println("\r\n"
				+ " _____                       _    _____                      _      _           _ \r\n"
				+ "|  __ \\                     | |  / ____|                    | |    | |         | |\r\n"
				+ "| |__) |___  _   _ _ __   __| | | |     ___  _ __ ___  _ __ | | ___| |_ ___  __| |\r\n"
				+ "|  _  // _ \\| | | | '_ \\ / _` | | |    / _ \\| '_ ` _ \\| '_ \\| |/ _ \\ __/ _ \\/ _` |\r\n"
				+ "| | \\ \\ (_) | |_| | | | | (_| | | |___| (_) | | | | | | |_) | |  __/ ||  __/ (_| |\r\n"
				+ "|_|  \\_\\___/ \\__,_|_| |_|\\__,_|  \\_____\\___/|_| |_| |_| .__/|_|\\___|\\__\\___|\\__,_|\r\n"
				+ "                                                      | |                         \r\n"
				+ "                                                      |_|                         \r\n" + "\r\n"
				+ "");
		printBreakLinesEquals();
		System.out.println();
	}

	// ==================================================
	// ============::Print Round Update::================
	// ==================================================
	/**
	 * prints Round Update in nice format using ASCI characters
	 */
	public void printRoundUpdate() {
		System.out.println();

		System.out.println(" _____                       _   _    _           _       _       \r\n"
				+ "|  __ \\                     | | | |  | |         | |     | |      \r\n"
				+ "| |__) |___  _   _ _ __   __| | | |  | |_ __   __| | __ _| |_ ___ \r\n"
				+ "|  _  // _ \\| | | | '_ \\ / _` | | |  | | '_ \\ / _` |/ _` | __/ _ \\\r\n"
				+ "| | \\ \\ (_) | |_| | | | | (_| | | |__| | |_) | (_| | (_| | ||  __/\r\n"
				+ "|_|  \\_\\___/ \\__,_|_| |_|\\__,_|  \\____/| .__/ \\__,_|\\__,_|\\__\\___|\r\n"
				+ "                                       | |                        \r\n"
				+ "                                       |_|                        \r\n" + "");
		printBreakLinesEquals();
		System.out.println();

	}

	// ==================================================
	// ============::Print Minor Development::===========
	// ==================================================
	/**
	 * prints Minor Development in nice format using ASCI characters
	 */
	public void printMinorDevelopment() {
		System.out.println();
		System.out.println("\r\n" + "\r\n"
				+ " __  __ _                    _____                 _                                  _   \r\n"
				+ "|  \\/  (_)                  |  __ \\               | |                                | |  \r\n"
				+ "| \\  / |_ _ __   ___  _ __  | |  | | _____   _____| | ___  _ __  _ __ ___   ___ _ __ | |_ \r\n"
				+ "| |\\/| | | '_ \\ / _ \\| '__| | |  | |/ _ \\ \\ / / _ \\ |/ _ \\| '_ \\| '_ ` _ \\ / _ \\ '_ \\| __|\r\n"
				+ "| |  | | | | | | (_) | |    | |__| |  __/\\ V /  __/ | (_) | |_) | | | | | |  __/ | | | |_ \r\n"
				+ "|_|  |_|_|_| |_|\\___/|_|    |_____/ \\___| \\_/ \\___|_|\\___/| .__/|_| |_| |_|\\___|_| |_|\\__|\r\n"
				+ "                                                          | |                             \r\n"
				+ "                                                          |_|                             \r\n"
				+ "\r\n" + "\r\n" + "");
		System.out.println();

	}

	// ==================================================
	// ============::Print Major Development::===========
	// ==================================================
	/**
	 * prints Major Development in nice format using ASCI characters
	 */
	public void printMajorDevelopment() {
		System.out.println();
		System.out.println("\r\n"
				+ " __  __       _              _____                 _                                  _   \r\n"
				+ "|  \\/  |     (_)            |  __ \\               | |                                | |  \r\n"
				+ "| \\  / | __ _ _  ___  _ __  | |  | | _____   _____| | ___  _ __  _ __ ___   ___ _ __ | |_ \r\n"
				+ "| |\\/| |/ _` | |/ _ \\| '__| | |  | |/ _ \\ \\ / / _ \\ |/ _ \\| '_ \\| '_ ` _ \\ / _ \\ '_ \\| __|\r\n"
				+ "| |  | | (_| | | (_) | |    | |__| |  __/\\ V /  __/ | (_) | |_) | | | | | |  __/ | | | |_ \r\n"
				+ "|_|  |_|\\__,_| |\\___/|_|    |_____/ \\___| \\_/ \\___|_|\\___/| .__/|_| |_| |_|\\___|_| |_|\\__|\r\n"
				+ "            _/ |                                          | |                             \r\n"
				+ "           |__/                                           |_|                             \r\n"
				+ "");
		System.out.println();

	}

	// ==================================================
	// ==============::Print Equals Break::==============
	// ==================================================
	/**
	 * prints a line of ='s to break up text
	 */
	public void printBreakLinesEquals() {
		System.out.println();
		System.out.println(
				"================================================================================================================");
		System.out.println();
	
	}

	// ==================================================
	// ==============::Print Star Break::================
	// ==================================================
	/**
	 * Prints a line of *'s to break up text
	 */
	public void printBreakLinesStar() {
		System.out.println();
		System.out.println(
				"****************************************************************************************************************");
		System.out.println();

	}

}
